# Oh no, I need to rollback.
# Usage:
#  ./docbrown cwva REDACTED reponame repobranch "Jun 24 2018 12:49"

# Someday these will be input parameters:
export GITHUBUSER=craigwongva #$1
export GITHUBPASSWORD=REDACTED #$2
export LONGTERM_GIT_REPO=deleteme100 #$3
export LONGTERM_GIT_BRANCH=master #4
export ROLLBACK_MON_DD_YYYY_HH_MM="July  4 2018 10:00" #$5

export TEMP_GIT_BRANCH=tempgitbranch
export TEMP_GIT_REMOTE=tempgitremote
export TEMP_LINUX_DIR=templinuxdir

##
# Create a temporary branch
#
cd ~/$LONGTERM_GIT_REPO
git checkout `git rev-list -1 --before="$ROLLBACK_MON_DD_YYYY_HH_MM" $LONGTERM_GIT_BRANCH`
git checkout -b $TEMP_GIT_BRANCH
#git add *
git remote add $TEMP_GIT_REMOTE https://$GITHUBUSER:$GITHUBPASSWORD@github.com/$GITHUBUSER/$LONGTERM_GIT_REPO
git push --set-upstream $TEMP_GIT_REMOTE $TEMP_GIT_BRANCH

##
# Create a temporary dir
#
# Use an external dir because...
# The earlier “git rev-list” cause:d a detached HEAD, but it still retains
# lineage to master, so a “git merge” will say “Already up-to-date”.
cd ~
# s/m: Add password for private repos
git clone -b $TEMP_GIT_BRANCH https://github.com/$GITHUBUSER/$LONGTERM_GIT_REPO $TEMP_LINUX_DIR
cd $TEMP_LINUX_DIR

##
# Replace old content with restored content
cd ~/$LONGTERM_GIT_REPO
git checkout $LONGTERM_GIT_BRANCH
git rm -rf *
git commit -m "Truncate repo pending restore"
git push https://$GITHUBUSER:$GITHUBPASSWORD@github.com/$GITHUBUSER/$LONGTERM_GIT_REPO
cp -r ../$TEMP_LINUX_DIR/* .
git add *
git commit -m "Restore to $ROLLBACK_MON_DD_YYYY_HH_MM"
git push https://$GITHUBUSER:$GITHUBPASSWORD@github.com/$GITHUBUSER/$LONGTERM_GIT_REPO

# Cleanup
git push $TEMP_GIT_REMOTE --delete $TEMP_GIT_BRANCH
git remote rm $TEMP_GIT_REMOTE
git branch -d $TEMP_GIT_BRANCH
rm -rf ~/$TEMP_LINUX_DIR


